#!/usr/bin/env zsh
# Usage:
# $1: filename
# Optional (must be $2): g[lobal]: Use existing stat | lstat in parent scope
# ${@:2}: Append to reply:
# - l[stat] : Look up using lstat (don't follow symlink), if empty match name
# - s[tat]  : Look up using  stat (do follow symlink), if empty match name
# - n[ame]  : Only match name
# - f[ollow]: Get resolution path of symlink
# - L[stat] : Same as above but don't match name
# - S[tat]  : Same as above but don't match name
# - a[ll]   : If a broken symlink: lstat follow lstat
#           : If a symlink       : lstat follow stat
#           : Otherwise          : lstat
# - A[ll]   : If a broken symlink: Lstat follow Lstat
#           : If a symlink       : Lstat follow Stat
#           : Otherwise          : Lstat
#
# or returns non-zero

emulate -L zsh
setopt extendedglob

local arg REPLY name=$1 
shift

if [[ ${1:l} = (g|global) ]]
then shift
else
	local -a stat lstat
	declare -ga reply=()
fi

zmodload -F zsh/stat b:zstat
for arg; do
	case ${arg[1]:l} in
	n|name)
		ls-color::from-name $name
		reply+=("$REPLY")
	;;
	l|lstat)
		(($#lstat)) || zstat -A lstat -L $name || return 1
		ls-color::from-mode $name $lstat[3]
		if [[ $REPLY || ${2[1]} = L ]]; then
			reply+=("$REPLY")
		else # fall back to name
			"$0" "$name" g n
		fi
	;;
	s|stat)
		(($#stat)) || zstat -A stat    $name || return 1
		ls-color::from-mode $name $stat[3]
		reply=("$REPLY")
		if [[ $REPLY || ${arg[1]} = S ]]; then
			reply+=("$REPLY")
		else # fall back to name
			"$0" "$name" g n
		fi
	;;
	f|follow)
		(($#lstat)) || zstat -A lstat -L $name || return 1
		reply+=("$stat[14]")
	;;
	a|all)
		# Match case
		"$0" "$name" g ${${${arg[1]%a}:+L}:-l}
		# won't append if empty
		reply+=($lstat[14])
		# $stat[14] will be empty if not a symlink
		if [[ $lstat[14] ]]; then
			if [[ -e $name ]]; then
				"$0" "$name" g ${${${arg[1]%a}:+S}:-s}
			else
				reply+=($reply[-2])
			fi
		fi
	;;
	*) return 2 ;;
	esac
done
